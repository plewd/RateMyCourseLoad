AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for ratemycourseload

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 100
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON

Resources:
  NetCodeWebAPIServerless:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Description: AWS Lambda running an HTTP server for ratemycourseload
      CodeUri: ./src/ServerlessAPI/
      Handler: ServerlessAPI
      Runtime: dotnet8
      MemorySize: 1024
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          SAMPLE_TABLE: !Ref CourseTable
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
      - DynamoDBCrudPolicy:
          TableName: !Ref CourseTable
      - SSMParameterWithSlashPrefixReadPolicy:
          ParameterName: "/ratemycourseload/*"
      Events:
        ProxyResource:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref ServiceApiGateway
        RootResource:
          Type: Api
          Properties:
            Path: /
            Method: ANY
            RestApiId: !Ref ServiceApiGateway

  ServiceApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors: "'ratemycourseload.com'"
      # required to prevent this resource from creating a second
      # stage named "Stage": https://github.com/aws/serverless-application-model/issues/3477
      OpenApiVersion: "2.0"
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          ThrottlingRateLimit: 50
          ThrottlingBurstLimit: 300

  CourseTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      TableName: ratemycourseloadCourseCatalog
      AttributeDefinitions:
        - AttributeName: Prefix
          AttributeType: S
        - AttributeName: Number
          AttributeType: S
      KeySchema:
        - AttributeName: Prefix
          KeyType: HASH
        - AttributeName: Number
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  RootCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: "ratemycourseload.com"
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: "ratemycourseload.com"
          HostedZoneId: Z03944661W4VEU5BAKW7X

  SubdomainCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: "*.ratemycourseload.com"
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: "*.ratemycourseload.com"
          HostedZoneId: Z03944661W4VEU5BAKW7X

  ApiGatewayDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: "api.ratemycourseload.com"
      EndpointConfiguration:
        Types:
          - REGIONAL
      RegionalCertificateArn: !Ref SubdomainCertificate

  ApiGatewayBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn: ApiGatewayDomainName
    Properties:
      DomainName: !Ref ApiGatewayDomainName
      RestApiId: !Ref ServiceApiGateway
      Stage: prod

  DNSRecordForApi:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: Z03944661W4VEU5BAKW7X
      Name: "api.ratemycourseload.com"
      Type: A
      AliasTarget:
        HostedZoneId: !GetAtt ApiGatewayDomainName.RegionalHostedZoneId
        DNSName: !GetAtt ApiGatewayDomainName.RegionalDomainName


  # --- WEBSITE ---
  WebsiteS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "ratemycourseload.com"
      PublicAccessBlockConfiguration:
        BlockPublicPolicy: false
      WebsiteConfiguration:
        IndexDocument: "index.html"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

  WebsiteS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteS3Bucket
      PolicyDocument:
        Id: PublicReadPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${WebsiteS3Bucket}/*"

  WebsiteRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: Z03944661W4VEU5BAKW7X
      Name: "ratemycourseload.com"
      Type: A
      AliasTarget:
        HostedZoneId: Z3AQBSTGFYJSTF # This is the hosted zone ID for S3 website endpoints in all regions
        DNSName: "s3-website-us-east-1.amazonaws.com."

#  WebsiteCloudFront:
#    Type: AWS::CloudFront::Distribution
#    Properties:
#      DistributionConfig:
#        Origins:
#          - DomainName: !GetAtt WebsiteS3Bucket.DomainName
#            Id: S3Origin
#            S3OriginConfig: {}
#        Enabled: true
#        DefaultRootObject: index.html
#        ViewerCertificate:
#          AcmCertificateArn: !Ref RootCertificate
#          SslSupportMethod: sni-only
#        DefaultCacheBehavior:
#          TargetOriginId: S3Origin
#          ViewerProtocolPolicy: redirect-to-https
#          AllowedMethods:
#            - GET
#            - HEAD
#          CachedMethods:
#            - GET
#            - HEAD
#          Compress: true
#          ForwardedValues:
#            QueryString: false
#            Cookies:
#              Forward: none
#
#  WebsiteRecordSet:
#    Type: AWS::Route53::RecordSet
#    Properties:
#      HostedZoneId: Z03944661W4VEU5BAKW7X
#      Name: "ratemycourseload.com"
#      Type: A
#      AliasTarget:
#        HostedZoneId: Z2FDTNDATAQYW2 # This is the hosted zone ID for CloudFront
#        DNSName: !GetAtt WebsiteCloudFront.DomainName

#Outputs:
#  ApiGatewayWebEndpoint:
#    Description: API Gateway endpoint URL (direct)
#    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
#
#  CNAMEWebEndpoint:
#    Description: API Gateway endpoint URL (CNAME)
#    Value: "api.ratemycourseload.com"